(function() {var implementors = {
"swap_buffer_queue":[["impl&lt;'a, B, T, N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"swap_buffer_queue/buffer/struct.BufferSlice.html\" title=\"struct swap_buffer_queue::buffer::BufferSlice\">BufferSlice</a>&lt;'a, B, T, N&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"swap_buffer_queue/buffer/trait.Buffer.html\" title=\"trait swap_buffer_queue::buffer::Buffer\">Buffer</a>&lt;T&gt;,</span>"],["impl&lt;const HEADER_SIZE:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, const TRAILER_SIZE:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"swap_buffer_queue/write/struct.BytesSlice.html\" title=\"struct swap_buffer_queue::write::BytesSlice\">BytesSlice</a>&lt;'_, HEADER_SIZE, TRAILER_SIZE&gt;"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"swap_buffer_queue/write_vectored/struct.VectoredSlice.html\" title=\"struct swap_buffer_queue::write_vectored::VectoredSlice\">VectoredSlice</a>&lt;'a&gt;"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"swap_buffer_queue/write_vectored/struct.VectoredFrame.html\" title=\"struct swap_buffer_queue::write_vectored::VectoredFrame\">VectoredFrame</a>&lt;'a&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()